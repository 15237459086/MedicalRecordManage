<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kurumi.mapper.MedicalRecordBorrowApplyItemMapper" >
  <resultMap id="BaseResultMap" type="com.kurumi.pojo.MedicalRecordBorrowApplyItem" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="medical_record_borrow_apply_id" property="medicalRecordBorrowApplyId" jdbcType="INTEGER" />
    <result column="visit_guid" property="visitGuid" jdbcType="VARCHAR" />
    <result column="only_id" property="onlyId" jdbcType="VARCHAR" />
    <result column="mr_id" property="mrId" jdbcType="VARCHAR" />
    <result column="visit_number" property="visitNumber" jdbcType="INTEGER" />
    <result column="patient_name" property="patientName" jdbcType="VARCHAR" />
    <result column="patient_code" property="patientCode" jdbcType="VARCHAR" />
    <result column="out_hospital_date_time" property="outHospitalDateTime" jdbcType="TIMESTAMP" />
    <result column="out_dept_code" property="outDeptCode" jdbcType="VARCHAR" />
    <result column="out_dept_name" property="outDeptName" jdbcType="VARCHAR" />
    <result column="replyer_name" property="replyerName" jdbcType="VARCHAR" />
    <result column="replyer_code" property="replyerCode" jdbcType="VARCHAR" />
    <result column="apply_date_time" property="applyDateTime" jdbcType="TIMESTAMP" />
    <result column="reply_date_time" property="replyDateTime" jdbcType="TIMESTAMP" />
    <result column="reply_status_code" property="replyStatusCode" jdbcType="VARCHAR" />
    <result column="reply_status_name" property="replyStatusName" jdbcType="VARCHAR" />
    <result column="validity_date_time" property="validityDateTime" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, medical_record_borrow_apply_id, visit_guid, only_id, mr_id, visit_number, patient_name, 
    patient_code, out_hospital_date_time, out_dept_code, out_dept_name, replyer_name, replyer_code, 
    apply_date_time, reply_date_time, reply_status_code, reply_status_name, validity_date_time, 
    version
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from medical_record_borrow_apply_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from medical_record_borrow_apply_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.kurumi.pojo.MedicalRecordBorrowApplyItem" 
  useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into medical_record_borrow_apply_item (id, medical_record_borrow_apply_id, visit_guid, 
      only_id, mr_id, visit_number, 
      patient_name, patient_code, out_hospital_date_time, 
      out_dept_code, out_dept_name, replyer_name, 
      replyer_code, apply_date_time, reply_date_time, 
      reply_status_code, reply_status_name, validity_date_time, 
      version)
    values (#{id,jdbcType=INTEGER}, #{medicalRecordBorrowApplyId,jdbcType=INTEGER}, #{visitGuid,jdbcType=VARCHAR}, 
      #{onlyId,jdbcType=VARCHAR}, #{mrId,jdbcType=VARCHAR}, #{visitNumber,jdbcType=INTEGER}, 
      #{patientName,jdbcType=VARCHAR}, #{patientCode,jdbcType=VARCHAR}, #{outHospitalDateTime,jdbcType=TIMESTAMP}, 
      #{outDeptCode,jdbcType=VARCHAR}, #{outDeptName,jdbcType=VARCHAR}, #{replyerName,jdbcType=VARCHAR}, 
      #{replyerCode,jdbcType=VARCHAR}, #{applyDateTime,jdbcType=TIMESTAMP}, #{replyDateTime,jdbcType=TIMESTAMP}, 
      #{replyStatusCode,jdbcType=VARCHAR}, #{replyStatusName,jdbcType=VARCHAR}, #{validityDateTime,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kurumi.pojo.MedicalRecordBorrowApplyItem" >
    insert into medical_record_borrow_apply_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="medicalRecordBorrowApplyId != null" >
        medical_record_borrow_apply_id,
      </if>
      <if test="visitGuid != null" >
        visit_guid,
      </if>
      <if test="onlyId != null" >
        only_id,
      </if>
      <if test="mrId != null" >
        mr_id,
      </if>
      <if test="visitNumber != null" >
        visit_number,
      </if>
      <if test="patientName != null" >
        patient_name,
      </if>
      <if test="patientCode != null" >
        patient_code,
      </if>
      <if test="outHospitalDateTime != null" >
        out_hospital_date_time,
      </if>
      <if test="outDeptCode != null" >
        out_dept_code,
      </if>
      <if test="outDeptName != null" >
        out_dept_name,
      </if>
      <if test="replyerName != null" >
        replyer_name,
      </if>
      <if test="replyerCode != null" >
        replyer_code,
      </if>
      <if test="applyDateTime != null" >
        apply_date_time,
      </if>
      <if test="replyDateTime != null" >
        reply_date_time,
      </if>
      <if test="replyStatusCode != null" >
        reply_status_code,
      </if>
      <if test="replyStatusName != null" >
        reply_status_name,
      </if>
      <if test="validityDateTime != null" >
        validity_date_time,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="medicalRecordBorrowApplyId != null" >
        #{medicalRecordBorrowApplyId,jdbcType=INTEGER},
      </if>
      <if test="visitGuid != null" >
        #{visitGuid,jdbcType=VARCHAR},
      </if>
      <if test="onlyId != null" >
        #{onlyId,jdbcType=VARCHAR},
      </if>
      <if test="mrId != null" >
        #{mrId,jdbcType=VARCHAR},
      </if>
      <if test="visitNumber != null" >
        #{visitNumber,jdbcType=INTEGER},
      </if>
      <if test="patientName != null" >
        #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="patientCode != null" >
        #{patientCode,jdbcType=VARCHAR},
      </if>
      <if test="outHospitalDateTime != null" >
        #{outHospitalDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outDeptCode != null" >
        #{outDeptCode,jdbcType=VARCHAR},
      </if>
      <if test="outDeptName != null" >
        #{outDeptName,jdbcType=VARCHAR},
      </if>
      <if test="replyerName != null" >
        #{replyerName,jdbcType=VARCHAR},
      </if>
      <if test="replyerCode != null" >
        #{replyerCode,jdbcType=VARCHAR},
      </if>
      <if test="applyDateTime != null" >
        #{applyDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyDateTime != null" >
        #{replyDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyStatusCode != null" >
        #{replyStatusCode,jdbcType=VARCHAR},
      </if>
      <if test="replyStatusName != null" >
        #{replyStatusName,jdbcType=VARCHAR},
      </if>
      <if test="validityDateTime != null" >
        #{validityDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  
  
  <update id="updateByPrimaryKeySelective" parameterType="com.kurumi.pojo.MedicalRecordBorrowApplyItem" >
    update medical_record_borrow_apply_item
    <set >
      <if test="medicalRecordBorrowApplyId != null" >
        medical_record_borrow_apply_id = #{medicalRecordBorrowApplyId,jdbcType=INTEGER},
      </if>
      <if test="visitGuid != null" >
        visit_guid = #{visitGuid,jdbcType=VARCHAR},
      </if>
      <if test="onlyId != null" >
        only_id = #{onlyId,jdbcType=VARCHAR},
      </if>
      <if test="mrId != null" >
        mr_id = #{mrId,jdbcType=VARCHAR},
      </if>
      <if test="visitNumber != null" >
        visit_number = #{visitNumber,jdbcType=INTEGER},
      </if>
      <if test="patientName != null" >
        patient_name = #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="patientCode != null" >
        patient_code = #{patientCode,jdbcType=VARCHAR},
      </if>
      <if test="outHospitalDateTime != null" >
        out_hospital_date_time = #{outHospitalDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outDeptCode != null" >
        out_dept_code = #{outDeptCode,jdbcType=VARCHAR},
      </if>
      <if test="outDeptName != null" >
        out_dept_name = #{outDeptName,jdbcType=VARCHAR},
      </if>
      <if test="replyerName != null" >
        replyer_name = #{replyerName,jdbcType=VARCHAR},
      </if>
      <if test="replyerCode != null" >
        replyer_code = #{replyerCode,jdbcType=VARCHAR},
      </if>
      <if test="applyDateTime != null" >
        apply_date_time = #{applyDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyDateTime != null" >
        reply_date_time = #{replyDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyStatusCode != null" >
        reply_status_code = #{replyStatusCode,jdbcType=VARCHAR},
      </if>
      <if test="replyStatusName != null" >
        reply_status_name = #{replyStatusName,jdbcType=VARCHAR},
      </if>
      <if test="validityDateTime != null" >
        validity_date_time = #{validityDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kurumi.pojo.MedicalRecordBorrowApplyItem" >
    update medical_record_borrow_apply_item
    set medical_record_borrow_apply_id = #{medicalRecordBorrowApplyId,jdbcType=INTEGER},
      visit_guid = #{visitGuid,jdbcType=VARCHAR},
      only_id = #{onlyId,jdbcType=VARCHAR},
      mr_id = #{mrId,jdbcType=VARCHAR},
      visit_number = #{visitNumber,jdbcType=INTEGER},
      patient_name = #{patientName,jdbcType=VARCHAR},
      patient_code = #{patientCode,jdbcType=VARCHAR},
      out_hospital_date_time = #{outHospitalDateTime,jdbcType=TIMESTAMP},
      out_dept_code = #{outDeptCode,jdbcType=VARCHAR},
      out_dept_name = #{outDeptName,jdbcType=VARCHAR},
      replyer_name = #{replyerName,jdbcType=VARCHAR},
      replyer_code = #{replyerCode,jdbcType=VARCHAR},
      apply_date_time = #{applyDateTime,jdbcType=TIMESTAMP},
      reply_date_time = #{replyDateTime,jdbcType=TIMESTAMP},
      reply_status_code = #{replyStatusCode,jdbcType=VARCHAR},
      reply_status_name = #{replyStatusName,jdbcType=VARCHAR},
      validity_date_time = #{validityDateTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getMedicalRecordOfBorrowApply" resultType="map"
		parameterType="com.kurumi.query.MedicalRecordBorrowQuery">
	select apply_item.id, apply_item.medical_record_borrow_apply_id, apply_item.visit_guid, 
      apply_item.only_id, apply_item.mr_id, apply_item.visit_number, 
      apply_item.patient_name, apply_item.patient_code, 
      apply_item.out_hospital_date_time, 
      date_format(apply_item.out_hospital_date_time,'%Y-%m-%d') as out_hospital_date_format,
      apply_item.out_dept_code, apply_item.out_dept_name,apply_item. replyer_name, 
      apply_item.replyer_code, 
      apply_item.apply_date_time,
      date_format(apply_item.apply_date_time,'%Y-%m-%d') as apply_date_format,
      apply_item.reply_date_time, 
      apply_item.reply_status_code, apply_item.reply_status_name, apply_item.validity_date_time, 
      apply_item.version,apply.borrower_name
	from medical_record_borrow_apply_item apply_item
	inner join medical_record_borrow_apply apply
	on apply_item.medical_record_borrow_apply_id = apply.id
	where apply_item.reply_status_code = 'APPLYING'
	<if test="applyStartDate!=null and applyEndDate!=null">
   	  <![CDATA[and (CAST(apply_item.apply_date_time AS date) >= #{applyStartDate} and CAST(apply_item.apply_date_time AS date) <= #{applyEndDate})]]>
	</if>
	<if test="currentStartNum != null and pageSize != null">
		limit #{currentStartNum},#{pageSize}
	</if>
	</select>
	
	
	<select id="getMedicalRecordCountOfBorrowApply" resultType="int"
		parameterType="com.kurumi.query.MedicalRecordBorrowQuery">
	select count(apply_item.id)
	from medical_record_borrow_apply_item apply_item
	inner join medical_record_borrow_apply apply
	on apply_item.medical_record_borrow_apply_id = apply.id
	where apply_item.reply_status_code = 'APPLYING'
	<if test="applyStartDate!=null and applyEndDate!=null">
   	  <![CDATA[and (CAST(apply_item.apply_date_time AS date) >= #{applyStartDate} and CAST(apply_item.apply_date_time AS date) <= #{applyEndDate})]]>
	</if>

	</select>
  
  
  <select id="getMedicalRecordOfBorrow" resultType="map"
		parameterType="com.kurumi.query.MedicalRecordBorrowQuery">
		select
		note.visit_guid,
		note.patient_name,
		note.sex_code,
		note.sex_name,
		date_format(note.birthday,'%Y-%m-%d') as birthday,
		note.document_type_code,
		note.document_type_name,
		note.id_number,
		note.only_id,
		note.mr_id,
		note.visit_number,
		date_format(note.in_hospital_date_time,'%Y-%m-%d') as in_hospital_date,
		date_format(note.in_hospital_date_time,'%Y-%m-%d %H:%i:%S') as in_hospital_date_time,
		note.in_dept_code,
		note.in_dept_name,
		date_format(note.out_hospital_date_time,'%Y-%m-%d') as out_hospital_date,
		date_format(note.out_hospital_date_time,'%Y-%m-%d %H:%i:%S') as
		out_hospital_date_time,
		note.out_dept_code,
		note.out_dept_name,
		note.out_hospital_type_code,
		note.out_hospital_type_name,
		note.treatment_sign_code,
		note.treatment_sign_name,
		note.version,
		temp_borrow.applying,
		temp_borrow.permit
		from
		medical_record note
		left join 
		(select apply_item.visit_guid,GROUP_CONCAT(apply_item.reply_status_code) as reply_status_codes,
		CASE locate('APPLYING',GROUP_CONCAT(apply_item.reply_status_code))
			WHEN 0 THEN
				null
			ELSE
				1
			END as applying,
		CASE locate('PERMIT',GROUP_CONCAT(apply_item.reply_status_code))
			WHEN 0 THEN
				null
			ELSE
				1
			END as  permit
		 from medical_record_borrow_apply apply
		inner join medical_record_borrow_apply_item apply_item
		on apply.id = apply_item.medical_record_borrow_apply_id
		where (apply_item.reply_status_code = 'APPLYING' 
			or (apply_item.reply_status_code='PERMIT' and CAST(apply_item.validity_date_time AS date) >=CAST(now() AS date)) 
			and apply.borrower_code = #{borrowerCode})
		group by apply_item.visit_guid
		) temp_borrow
		on note.visit_guid = temp_borrow.visit_guid
		where note.visit_guid in (
		select DISTINCT note1.visit_guid from
		medical_record note1
		inner join medical_record_trace trace
		on note1.visit_guid = trace.visit_guid
		where trace.trace_type_code = 'BABY')
		<if test="patientName != null">
			and note.patient_name=#{patientName}
		</if>
		<if test="patientCode != null">
			and note.id_number=#{patientCode}
		</if>

		<if test="mrId != null">
			and note.mr_id=#{mrId}
		</if>

		<if test="outHospitalStartDate!=null and outHospitalEndDate!=null">
	   	  <![CDATA[and (CAST(note.out_hospital_date_time AS date) >= #{outHospitalStartDate} and CAST(note.out_hospital_date_time AS date) <= #{outHospitalEndDate})]]>
		</if>
		<if test="outDeptCode!=null">
			and note.out_dept_code = #{outDeptCode}
		</if>
		order by
		note.out_hospital_date_time desc
		
		<if test="currentStartNum != null and pageSize != null">
			limit #{currentStartNum},#{pageSize}
		</if>

	</select>
	
	
	<select id="getMedicalRecordCountOfBorrow" resultType="int"
		parameterType="com.kurumi.query.MedicalRecordBorrowQuery">
		select
		count(note.visit_guid)
		from
		medical_record note
		left join 
		(select apply_item.visit_guid,GROUP_CONCAT(apply_item.reply_status_code) as reply_status_codes,
		CASE locate('APPLYING',GROUP_CONCAT(apply_item.reply_status_code))
			WHEN 0 THEN
				null
			ELSE
				1
			END as applying,
		CASE locate('PERMIT',GROUP_CONCAT(apply_item.reply_status_code))
			WHEN 0 THEN
				null
			ELSE
				1
			END as  permit
		 from medical_record_borrow_apply apply
		inner join medical_record_borrow_apply_item apply_item
		on apply.id = apply_item.medical_record_borrow_apply_id
		where (apply_item.reply_status_code = 'APPLYING' 
			or (apply_item.reply_status_code='PERMIT' and CAST(apply_item.validity_date_time AS date) >=CAST(now() AS date)) 
			and apply.borrower_code = #{borrowerCode})
		group by apply_item.visit_guid
		) temp_borrow
		on note.visit_guid = temp_borrow.visit_guid
		where note.visit_guid in (
		select DISTINCT note1.visit_guid from
		medical_record note1
		inner join medical_record_trace trace
		on note1.visit_guid = trace.visit_guid
		where trace.trace_type_code = 'BABY')
		<if test="patientName != null">
			and note.patient_name=#{patientName}
		</if>
		<if test="patientCode != null">
			and note.id_number=#{patientCode}
		</if>

		<if test="mrId != null">
			and note.mr_id=#{mrId}
		</if>

		<if test="outHospitalStartDate!=null and outHospitalEndDate!=null">
	   	  <![CDATA[and (CAST(note.out_hospital_date_time AS date) >= #{outHospitalStartDate} and CAST(note.out_hospital_date_time AS date) <= #{outHospitalEndDate})]]>
		</if>
		<if test="outDeptCode!=null">
			and note.out_dept_code = #{outDeptCode}
		</if>
		order by
		note.out_hospital_date_time desc

	</select>
	
	
	<update id="borrowReplyById" parameterType="com.kurumi.pojo.MedicalRecordBorrowApplyItem" >
    update medical_record_borrow_apply_item
    set
      replyer_name = #{replyerName,jdbcType=VARCHAR},
      replyer_code = #{replyerCode,jdbcType=VARCHAR},
      reply_date_time = #{replyDateTime,jdbcType=TIMESTAMP},
      reply_status_code = #{replyStatusCode,jdbcType=VARCHAR},
      reply_status_name = #{replyStatusName,jdbcType=VARCHAR},
      validity_date_time = #{validityDateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


	<select id="getBorrowRecord" resultType="map"
		parameterType="com.kurumi.query.MedicalRecordBorrowQuery">
		select apply_item.id, apply_item.medical_record_borrow_apply_id, apply_item.visit_guid, 
      	apply_item.only_id, apply_item.mr_id, apply_item.visit_number, 
      	apply_item.patient_name, apply_item.patient_code, 
      	apply_item.out_hospital_date_time, 
      	date_format(apply_item.out_hospital_date_time,'%Y-%m-%d') as out_hospital_date_format,
      	apply_item.out_dept_code, apply_item.out_dept_name,apply_item. replyer_name, 
      	apply_item.replyer_code, 
      	apply_item.apply_date_time,
      	date_format(apply_item.apply_date_time,'%Y-%m-%d') as apply_date_format,
      	apply_item.reply_date_time, 
      	apply_item.reply_status_code, apply_item.reply_status_name, 
      	apply_item.validity_date_time, 
      	date_format(apply_item.validity_date_time,'%Y-%m-%d') as validity_date_format,
      	apply_item.version,apply.borrower_name,
	  	CASE CAST(apply_item.validity_date_time AS date) >=CAST(now() AS date)
			WHEN true THEN
				1
			ELSE
				0
			END as show_status
		from medical_record_borrow_apply_item apply_item
		inner join medical_record_borrow_apply apply
		on apply_item.medical_record_borrow_apply_id = apply.id
		where apply.borrower_code =#{borrowerCode}
		<if test="patientName != null">
			and apply_item.patient_name=#{patientName}
		</if>
		<if test="patientCode != null">
			and apply_item.patient_code=#{patientCode}
		</if>

		<if test="mrId != null">
			and apply_item.mr_id=#{mrId}
		</if>

		<if test="outHospitalStartDate!=null and outHospitalEndDate!=null">
	   	  <![CDATA[and (CAST(apply_item.out_hospital_date_time AS date) >= #{outHospitalStartDate} and CAST(apply_item.out_hospital_date_time AS date) <= #{outHospitalEndDate})]]>
		</if>
		<if test="outDeptCode!=null">
			and apply_item.out_dept_code = #{outDeptCode}
		</if>
		order by apply_item.apply_date_time desc
		<if test="currentStartNum != null and pageSize != null">
			limit #{currentStartNum},#{pageSize}
		</if>
	</select>
	
	
	<select id="getBorrowRecordCount" resultType="int"
		parameterType="com.kurumi.query.MedicalRecordBorrowQuery">
		select count(apply_item.id)
		from medical_record_borrow_apply_item apply_item
		inner join medical_record_borrow_apply apply
		on apply_item.medical_record_borrow_apply_id = apply.id
		where apply.borrower_code =#{borrowerCode}
		<if test="patientName != null">
			and apply_item.patient_name=#{patientName}
		</if>
		<if test="patientCode != null">
			and apply_item.patient_code=#{patientCode}
		</if>

		<if test="mrId != null">
			and apply_item.mr_id=#{mrId}
		</if>

		<if test="outHospitalStartDate!=null and outHospitalEndDate!=null">
	   	  <![CDATA[and (CAST(apply_item.out_hospital_date_time AS date) >= #{outHospitalStartDate} and CAST(apply_item.out_hospital_date_time AS date) <= #{outHospitalEndDate})]]>
		</if>
		<if test="outDeptCode!=null">
			and apply_item.out_dept_code = #{outDeptCode}
		</if>
		order by apply_item.apply_date_time desc
		
	</select>
</mapper>